//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HA.Workflow.Services.Controls.Navigation
{
    using System;
    using System.ComponentModel;
    using System.Workflow.Activities;
    using System.Workflow.ComponentModel;
    using System.Workflow.ComponentModel.Design;
    using System.Workflow.ComponentModel.Compiler;
    using HA.Workflow.Services.Interfaces;


    [ToolboxItemAttribute(typeof(ActivityToolboxItem))]
    public partial class Rehydrated : HandleExternalEventActivity
    {

        public static DependencyProperty EProperty = DependencyProperty.Register("E", typeof(NavigationFlowEventArgs), typeof(Rehydrated));

        public Rehydrated()
        {
            base.InterfaceType = typeof(INavigationFlow);
            base.EventName = "Rehydrated";
        }

        [BrowsableAttribute(false)]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        public override System.Type InterfaceType
        {
            get
            {
                return base.InterfaceType;
            }
            set
            {
                throw new InvalidOperationException("Cannot set InterfaceType on a derived HandleExternalEventActivity.");
            }
        }

        [BrowsableAttribute(false)]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        public override string EventName
        {
            get
            {
                return base.EventName;
            }
            set
            {
                throw new InvalidOperationException("Cannot set EventName on a derived HandleExternalEventActivity.");
            }
        }

        [ValidationOptionAttribute(ValidationOption.Required)]
        public NavigationFlowEventArgs E
        {
            get
            {
                return ((NavigationFlowEventArgs)(this.GetValue(Rehydrated.EProperty)));
            }
            set
            {
                this.SetValue(Rehydrated.EProperty, value);
            }
        }

        protected override void OnInvoked(System.EventArgs e)
        {
            this.E = ((NavigationFlowEventArgs)(e));
        }
    }
}
